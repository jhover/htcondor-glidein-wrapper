# Glidein condor config

#
# Things you should edit:
#

# This string is useful for monitoring.  You should change it to something unique to your resource.
#GLIDEIN_Site = "Firefly - HCC Campus Grid"


# Thinks you can edit:

# Which hosts would you like be able to shutdown/run this glidein.  Default is usually ok.
ALLOW_ADMINISTRATOR = $(HOSTNAME), $(GLIDEIN_HOST)

# How long should the glidein run if it's not running any jobs.  In seconds.
STARTD_NOCLAIM_SHUTDOWN   = <%= bosco_minslotnoclaim %>*60


# The Condor Daemons will start to shutdown when less than the minimum slot time life remains
# The Daemon shutdown time is specified in glidein_wrapper with the -r ($_DaemonTTL) and leave a 5 minutes window in the slot life.
#
# We will kill off any daemons and jobs running at the start of that 5 minute window
SHUTDOWN_GRACEFUL_TIMEOUT = (<%= bosco_minslotlife %> - 5) * 60
SHUTDOWN_FAST_TIMEOUT     = (<%= bosco_minslotlife %> - 5) * 60
MAXJOBRETIREMENTTIME      = (<%= bosco_minslotlife %> - 5) * 60
#
# We will keep the slot and job alive until the local scheduler kills the slot daemon
#SHUTDOWN_GRACEFUL_TIMEOUT = <%= bosco_maxslotlife %>*60
#SHUTDOWN_FAST_TIMEOUT     = <%= bosco_maxslotlife %>*60
#MAXJOBRETIREMENTTIME      = <%= bosco_maxslotlife %>*60


# We will never allow Premption of jobs
PREEMPTION_REQUIREMENTS   = False
PREEMPTION_RANK           = 0

# We need at least 64K open files for PortableCVMFS etc
#MAX_FILE_DESCRIPTORS=65536

# Force the jobs to copy and not deletgate a jobs GSI X.509 credentials
DELEGATE_JOB_GSI_CREDENTIALS = FALSE

#
# Things you should probably leave alone
#

LOG = $(LOCAL_DIR)/log
EXECUTE = $(LOCAL_DIR)/execute

MAIL = /bin/mail
DAEMON_LIST = MASTER, STARTD
MASTER_ADDRESS_FILE = $(LOG)/.master_address
MASTER = $(SBIN)/condor_master
MASTER_LOG = $(LOG)/MasterLog
STARTD = $(SBIN)/condor_startd
STARTER = $(SBIN)/condor_starter
PROCD = $(SBIN)/condor_procd
PROCD_LOG = $(LOG)/ProcLog
PROCD_ADDRESS = $(LOCK)/procd_address

STARTER_STD = $(SBIN)/condor_starter.std
STARTER_LIST = STARTER, STARTER_STD

USE_NFS = False
USE_CKPT_SERVER = False

CCB_ADDRESS = $(COLLECTOR_HOST)

LOCK = $(LOG)
STARTD_LOG = $(LOG)/StartLog
STARTER_LOG = $(LOG)/StarterLog

#STARTD_DEBUG = D_ALL
#STARTER_DEBUG = D_ALL

START = True
SUSPEND = False
CONTINUE = True
PREEMPT = False
WANT_VACATE = False
WANT_SUSPEND = True
SUSPEND_VANILLA = False
WANT_SUSPEND_VANILLA = True
KILL = False
IS_GLIDEIN = True

STARTD_EXPRS = IS_GLIDEIN, START, DaemonStopTime, GLIDEIN_Site, BOSCOCluster

MASTER_WAITS_FOR_GCB_BROKER = False

SEC_DEFAULT_AUTHENTICATION = PREFERRED
SEC_DEFAULT_AUTHENTICATION_METHODS = FS,CLAIMTOBE
SEC_ENABLE_MATCH_PASSWORD_AUTHENTICATION = TRUE

JOB_INHERITS_STARTER_ENVIRONMENT = TRUE
JOB_RENICE_INCREMENT = 0


STARTD_SENDS_ALIVES = True
WANT_UDP_COMMAND_SOCKET = False
UPDATE_COLLECTOR_WITH_TCP = False
SEC_DEFAULT_ENCRYPTION=OPTIONAL
SEC_DEFAULT_INTEGRITY=REQUIRED

# Security configuration with password
SEC_PASSWORD_FILE = $(LOCAL_DIR)/passwdfile
SEC_ADVERTISE_STARTD_AUTHENTICATION = REQUIRED
SEC_ADVERTISE_STARTD_INTEGRITY = REQUIRED
SEC_ADVERTISE_STARTD_AUTHENTICATION_METHODS = PASSWORD
SEC_DAEMON_AUTHENTICATION = REQUIRED
SEC_DAEMON_INTEGRITY = REQUIRED
SEC_DAEMON_AUTHENTICATION_METHODS = FS,PASSWORD
SEC_NEGOTIATOR_AUTHENTICATION = REQUIRED
SEC_NEGOTIATOR_INTEGRITY = REQUIRED
SEC_NEGOTIATOR_AUTHENTICATION_METHODS = PASSWORD
SEC_CLIENT_AUTHENTICATION_METHODS = FS, PASSWORD, KERBEROS, GSI

ALLOW_ADVERTISE_STARTD = condor_pool@*/*
ALLOW_NEGOTIATOR = condor_pool@*/*
ALLOW_DAEMON = condor_pool@*/* $(HOSTNAME) submit-side@matchsession

##############

# Create a unique MachineID based the time this job started
MachineID = (9999999999 - DaemonStartTime)
STARTD_ATTRS = $(STARTD_ATTRS) MachineID

##############

# Cron job to check health of the slot
STARTD_CRON_JOBLIST                      = $(STARTD_CRON_JOBLIST) SlotStartup SlotIsHealthy

STARTD_CRON_SlotStartup_EXECUTABLE       = $(LOCAL_DIR)/SlotIsHealthy.sh
STARTD_CRON_SlotStartup_MODE             = OneShot
STARTD_CRON_SlotStartup_RECONFIG         = False
STARTD_CRON_SlotStartup_RECONFIG_RERUN   = True
STARTD_CRON_SlotStartup_KILL             = True

STARTD_CRON_SlotIsHealthy_EXECUTABLE     = $(LOCAL_DIR)/SlotIsHealthy.sh
STARTD_CRON_SlotIsHealthy_PERIOD         = 5m
STARTD_CRON_SlotIsHealthy_MODE           = Periodic
STARTD_CRON_SlotIsHealthy_RECONFIG       = False
STARTD_CRON_SlotIsHealthy_RECONFIG_RERUN = False
STARTD_CRON_SlotIsHealthy_KILL           = True

STARTD_EXPRS = $(STARTD_EXPRS) SlotIsHealthy SlotHealthReason
STARTD_ATTRS = $(STARTD_ATTRS) SlotIsHealthy SlotHealthReason

START = ( ($(START)) && (SlotIsHealthy =?= True) )

###############
#
STARTD_EXPRS = $(STARTD_EXPRS) RCC_Factory
STARTD_ATTRS = $(STARTD_ATTRS) RCC_Factory
RCC_Factory = "<%= bosco_factory %>"
#
###############
